name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build and Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Install Bazel
        uses: bazel-contrib/setup-bazel@0.8.5
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}
          repository-cache: true

      - name: Enable long paths (Windows)
        if: runner.os == 'Windows'
        run: git config --system core.longpaths true

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev

      # Cache is only safe on Linux/macOS due to file locking issues on Windows
      - name: Cache Bazel (not Windows)
        if: runner.os != 'Windows'
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/bazel
            ~/.cache/bazelisk
          key: ${{ runner.os }}-bazel-${{ hashFiles('**/Cargo.toml', '**/MODULE.bazel', '**/*.bzl') }}
          restore-keys: |
            ${{ runner.os }}-bazel-

      # Windows: Always clean first, set a short output root, force serial build
      - name: Bazel clean (Windows)
        if: runner.os == 'Windows'
        run: bazel clean --expunge
        env:
          BAZEL_OUTPUT_USER_ROOT: C:/bzl

      - name: Build
        if: runner.os != 'Windows'
        run: bazel build //:simple_amplifier --compilation_mode=opt

      - name: Build (Windows)
        if: runner.os == 'Windows'
        run: bazel build //:simple_amplifier --compilation_mode=fastbuild --spawn_strategy=local --enable_runfiles=false --jobs=1
        env:
          BAZEL_OUTPUT_USER_ROOT: C:/bzl

      # - name: Test
      #   if: runner.os != 'Windows'
      #   run: bazel test //...
      #
      # - name: Test (Windows)
      #   if: runner.os == 'Windows'
      #   run: bazel test //... --spawn_strategy=local --enable_runfiles=false --jobs=1
      #   env:
      #     BAZEL_OUTPUT_USER_ROOT: C:/bzl

      - name: Bundle plugins
        run: bazel run //xtask:xtask -- bundle simple_amplifier --release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: plugin-${{ matrix.os }}
          path: '**/target/bundled/'
